per_cent = {'ТКБ': 5.6, 'СКБ': 5.9, 'ВТБ': 4.28, 'СБЕР': 4.0}  # Распределение ставок по вкладам в различных банках
money = float(input("Введите сумму, которую планируете внести на счёт:"))  # Запрашиваем сумму вклада

# Далее у меня есть два варианта решения.
# Ниже в комментарий обёрнуто то, что мы можем сделать чисто по материалам модуля.

'''
# v1
# Через обращение к словарю находим, какую сумму можно получить в каждом банке, и сохраняем в переменные:
ret_TKB = round(money/100*per_cent['ТКБ'], 2)
ret_SKB = round(money/100*per_cent['СКБ'], 2)
ret_VTB = round(money/100*per_cent['ВТБ'], 2)
ret_SBER = round(money/100*per_cent['СБЕР'], 2)

deposit = [ret_TKB, ret_SKB, ret_VTB, ret_SBER]  # Формируем список прибыли во всех банках

# Чтобы продолжить работу по этому варианту, нужно обернуть в комментарий строки с 'v2' по 'конец v2'
# (сейчас это строки 22-29).
# конец v1
'''

# v2
# Мне хотелось использовать функцию map, т. к. очевидно, что такой вариант короче.
# Но для её использования нужна её какая-нибудь функция - так нагуглилась lambda.

pc_list = per_cent.values()  # Извлекаем значения процентных ставок в список

deposit = list(map(lambda x: round(money/100*x, 2), pc_list))  # Вычисляем прибыль по ставкам и оформляем в список
# конец v2

print('Суммы, которые вы можете получить процентами в различных банках:', deposit)  # Выводим полученный список

max_dep = max(deposit)  # Находим максимальную прибыль по вкладу

# Для удобства пользователя мне захотелось дополнительно обозначить банк, в котором он может получить эту прибыль.
# Для этой задачи оптимальным показалось найти в словаре максимальный value и вывести его key - с этим снова помог гугл)
max_bank = max(per_cent, key=per_cent.get)

print(f'Максимальная сумма, которую вы можете заработать — {max_dep} (в банке {max_bank}).')
